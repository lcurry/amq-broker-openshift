
// Use your gitlab access token to clone this repo locally 
// If don't have an access token for gitlab, see gitlab docs on creating access token:
// https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html  
git clone https://<token>@gitlab.global.lmco.com/force/paas/middleware/amq-broker-openshift.git

// change directories into the root folder of the newly cloned repository 
cd amq-broker-openshift 

## Setup Openshift environment (one time setup service account and roles)
// The following steps only need to be performed once per environment
// login to openshift cluster as a user with cluster-admin role  
oc login ...

// Create 'gitlab-amq-broker-operator-sa' service account in the 'openshift-operators' namespace 
$ oc create sa gitlab-amq-broker-operator-sa -n openshift-operators

// create ClusterRole 'amq-broker-operator' 
$ oc apply -f amq-operator/cluster_role_amq_broker_operator.yaml 

// Apply  the ClusterRole 'amq-broker-operator' to service account 'gitlab-amq-broker-operator-sa' 
// This is needed or else the service account can't add similar (project scoped) role to the (project scoped)  
// 'amq-broker-operator' service account 
$ oc apply -f amq-operator/cluster_role_binding_amq_broker_operator.yaml

// Apply 'admin' ClusterRole to 'gitlab-amq-broker-operator-sa' 
$ oc adm policy add-cluster-role-to-user admin system:serviceaccount:openshift-operators:gitlab-amq-broker-operator-sa 

// Create role needed by sa for customresourcedefinitions  (not sure needed)
$ oc create clusterrole amq-broker-operator-customresourcedefinitions-clusterrole --verb=* --resource=customresourcedefinitions.apiextensions.k8s.io --resource-name=activemqartemises.broker.amq.io --resource-name=activemqartemisaddresses.broker.amq.io --resource-name=activemqartemisscaledowns.broker.amq.io --resource-name=activemqartemissecurities.broker.amq.io
- or - 
$ oc apply -f amq-operator/amq-crd-clusterrole.yaml 

// add role to sa 
$ oc adm policy add-cluster-role-to-user  amq-broker-operator-customresourcedefinitions-clusterrole system:serviceaccount:openshift-operators:gitlab-amq-broker-operator-sa

// to confirm cluster roles have been added to service account gitlab-amq-broker-operator-sa
// $ oc describe clusterrolebinding/amq-broker-operator 
$ oc describe clusterrolebinding/amq-broker-operator-customresourcedefinitions-clusterrole


// Deploy the main broker CRD needed for amq-broker-operator (Note: CRDs are cluster-wide resources 
// so you only need to perform this step once for entire cluster)
// these crds may or may not already exist. If exist, and different version will 
// need to delete existing before 
// If you must delete existing, then any broker that has been deployed based on the previous crds will be garbage 
// collected and must be re-deployed based on the new crds 
$ oc apply -f amq-operator/broker_activemqartemis_crd.yaml
$ oc apply -f amq-operator/broker_activemqartemisaddress_crd.yaml
$ oc apply -f amq-operator/broker_activemqartemisscaledown_crd.yaml
$ oc apply -f amq-operator/broker_activemqartemissecurity_crd.yaml

// to see the new crds 
$ oc get crds | grep amq 

// Get token for new service account 'gitlab-amq-broker-operator-sa' 
//
$ oc sa get-token -n openshift-operators gitlab-amq-broker-operator-sa

// the token returned from above command can be used to login to Openshift using 'oc login' command 
// from the automation code in Gitlab Pipeline 

## Run from Gitlab pipeline as service account 'gitlab-amq-broker-operator-sa'
// login to environment with service account token  
 oc login --token=<service account token> --server=https://api.ocp-uge1-dev.ecs.us.lmco.com:6443

// switch to project where Operator should be installed. E.g. referred below as <project name>
$ oc project <project name> 

// Create the amq-broker-operator service account local to project.
$ oc create serviceaccount amq-broker-operator -n <project name> 

// Create the amq-broker-operator role in your project. 
$ oc create -f amq-operator/role_amq_broker_operator.yaml -n <project name>

// Create the amq-broker-operator role binding in your project. 
$ oc create -f amq-operator/role_binding_amq_broker_operator.yaml -n <project name>

// DID NOT NEED THIS STEP 
// add the 'admin' role to the new local amq-broker-operator' service account (not sure needed)
// $ oc adm policy add-role-to-user admin system:serviceaccount:<project name>:amq-broker-operator 


// As 'gitlab-amq-broker-operator-sa' install operator 
$ oc apply -f amq-operator/operator.yaml 
// apply proper roles to 'user1'  (applying a clusterrole as a "rolebing" (not clusterrolebiding) so not cluster-wide scope
$ oc adm policy add-role-to-user  amq-broker-operator-customresourcedefinitions-clusterrole user1 -n <project name>  
// add the amq role created previously to allow user view,edit, update on the crds (APis) via crs
$ oc adm policy add-role-to-user  amq-broker-operator user1 -n <project name>  

// confirm clusterrole was added to user1 
$ oc describe rolebinding/amq-broker-operator-customresourcedefinitions-clusterrole  -n <project name> 
// confirm role was added to user1 
$ oc describe rolebinding/amq-broker-operator -n <project name> 

// apply operator 
$ oc apply -f amq-operator/operator.yaml 

// apply "simple" instance CR of broker 
// NOTE: this simple broker is only for testing operator and does not enable 
// SSL on routes and thus web console route will not be allowed external access  
$ oc apply -f amq-broker/broker_activemqartemis_cr.yaml


## Sample: Can now be run as user <example user> after provisioning of operator by Gitlab service account 
// Example showing how user who created SErviceCentral request is now able to login with own user name and 
// install broker instance 
$ oc login --token=... 

// switch to project where AMQ Broker operator was installed  
$ oc project <project name> 

// Apply CR for a "custom" broker 
// NOTE: this broker specifies secret name that should contain CA cert 
// therefore the secrets (containing appropriate CA cert) must be created prior to the broker being deployed  
// unless you create these secrets containing certs in the project first, 
// you will get errors on the 'oc apply' command on the broker yaml  
// "MountVolume.SetUp failed for volume "iof-amq-secret-volume" : secret "iof-amq-secret" not found"
$ oc apply -f amq-broker/ActiveMQArtemis_broker-iof.yaml



###For Testing outside Lockheed  

// Prep LMCO has 'project-admin' (different from 'admin') 
// so create ClusterRole 'project-admin'
$ oc create -f extra/cluster_role_project_admin.yaml 

// Assign project-admin role to user1 
$ oc adm policy add-role-to-user project-admin user1 -n user1-personal 